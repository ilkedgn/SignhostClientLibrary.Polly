name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  SH_VERSION_SUFFIX: 'preview'

jobs:
  build:
    runs-on: windows-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch version
        run: |
          # Fetch all tags from the remote repository
          git fetch https://github.com/Evidos/SignhostClientLibrary.Polly.git --tags
          # Get the most recent tag based on the commit date
          LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)
          # If the tag contains a "v", remove it to get the version (if needed)
          VERSION=${LATEST_TAG#v}
          # Set the version as an environment variable for subsequent steps
          echo "LATEST_VERSION=${VERSION}" >> $GITHUB_ENV
          # Print the version for debugging
          echo "Version ${VERSION}"
        shell: bash

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Clear NuGet Cache
        run: dotnet nuget locals all --clear

      - name: Restore NuGet packages
        run: dotnet restore "src/SignhostAPIRetryClient.sln"
        continue-on-error: ${{ github.event.pull_request.head.repo.fork == true }}
        if: ${{ github.event.pull_request.head.repo.fork == false }}
      - name: Build solution
        run: dotnet build "src/SignhostAPIRetryClient.sln" --configuration Release

      - name: Test with Coverage
        run: dotnet test --no-build src/Signhost.APIClient.Tests/Signhost.APIClient.Tests.csproj --collect:"XPlat Code Coverage" -c Release

      - name: Pack NuGet package
        run: dotnet pack "src/Signhost.APIClient/Signhost.APIClient.csproj" --configuration Release /p:Version=${{ env.LATEST_VERSION }} /p:IncludeReadmeFile=true
        if: ${{ github.event.pull_request.head.repo.fork == false }}

      - name: Upload NuGet Package
        uses: actions/upload-artifact@v3
        with:
          name: Nuget
          path: '**/*.nupkg'
        if: ${{ github.event.pull_request.head.repo.fork == false }}

      - name: Publish NuGet package to NuGet.org
        run: |
          dotnet nuget push '**/*.nupkg' --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json
        env:
          POLLY_TEST: ${{ secrets.NUGET_KEY }}
        if: ${{ github.event.pull_request.head.repo.fork == false }}
